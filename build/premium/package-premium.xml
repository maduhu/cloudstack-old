<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 2008 Cloud.com, Inc. All Rights Reserved -->

<project name="Cloud Stack Package" basedir=".">
    <description>
        This is a package.xml with tools to package the cloud stack distribution
    </description>
    
    <property name="base.dir" location="${ant.file.Cloud Stack Package}/../.."/>
    <property name="dist.dir" location="${base.dir}/dist"/>
    <property name="publish.dir" location="${dist.dir}"/>
    <property name="client.dist.dir" location="${dist.dir}/client"/>
    <property name="server.dist.dir" location="${dist.dir}/client"/>
    <property name="agent.dist.dir" location="${dist.dir}/agent"/>
    <property name="docs.dist.dir" location="${dist.dir}/docs"/>
    <property name="db.dist.dir" location="${dist.dir}/db"/>
    <property name="usage.dist.dir" location="${dist.dir}/usage"/>
	<property name="kvm.domr.patch.dir" location="${scripts.dir}/vm/hypervisor/kvm/patch"/>
    
    <target name="-init-package">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${publish.dir}"/>
    </target>
    
    <target name="package-server" depends="-init-package">
        <delete file="${dist.dir}/client.zip"/>
        <zip destfile="${dist.dir}/client.zip" basedir="${server.dist.dir}"/>
    </target>
    
   <target name="package-client" depends="-init-package">
        <delete file="${dist.dir}/client.zip"/>
        <zip destfile="${dist.dir}/client.zip" basedir="${client.dist.dir}">
			<zipfileset dir="${client.dist.dir}">
                <exclude name="**/*.sh"/>
            </zipfileset>
		    <zipfileset dir="${client.dist.dir}" filemode="555">
                <include name="**/*.sh"/>
            </zipfileset>
		</zip>
    </target>

    <target name="package-usage" depends="-init-package">
        <delete file="${dist.dir}/usage.zip"/>
        <zip destfile="${dist.dir}/usage.zip" basedir="${usage.dist.dir}"/>
    </target>

    <target name="package-agent" depends="-init-package, package-systemvm-premium, package-kvm-domr-patch">
        <delete file="${dist.dir}/agent.zip"/>
        <zip destfile="${dist.dir}/agent.zip" duplicate="preserve">
            <zipfileset dir="${thirdparty.dir}">
                <include name="xmlrpc-client-3.1.3.jar" />
                <include name="xmlrpc-common-3.1.3.jar" />
                <include name="ws-commons-util-1.0.2.jar" />
                <include name="log4j-1.2.15.jar" />
                <include name="apache-log4j-extras-1.0.jar" />
                <include name="gson-1.3.jar" />
                <include name="commons-httpclient-3.1.jar" />
                <include name="commons-logging-1.1.1.jar" />
                <include name="commons-collections-3.2.1.jar" />
                <include name="commons-codec-1.4.jar" />
                <include name="commons-pool-1.4.jar" />
                <include name="libvirt-0.4.2.jar" />
                <include name="jna.jar" />
                <include name="cglib-nodep-2.2.jar" />
                <include name="trilead-ssh2-build213.jar" />
                <include name="xenserver-5.5.0-1.jar" />
            </zipfileset>
            <zipfileset dir="${jar.dir}">
                <include name="${agent.jar}" />
                <include name="${utils.jar}" />
                <include name="${core.jar}" />
                <include name="${core-premium.jar}"/>
            </zipfileset>


            <zipfileset dir="${dist.dir}" prefix="scripts/vm/hypervisor/xenserver/patch" filemode="555">
                <include name="systemvm-premium.zip" />
            </zipfileset>

            <zipfileset dir="${dist.dir}" prefix="scripts/vm/hypervisor/" filemode="555">
                <include name="systemvm-premium.zip" />
            </zipfileset>
        	
            <zipfileset dir="${agent.dist.dir}" filemode="770">
                <include name="run.sh"/>
                <include name="agent.sh"/>
            </zipfileset>
            <zipfileset dir="${agent.dist.dir}">
                <exclude name="run.sh/"/>
                <exclude name="agent.sh"/>
                <include name="**/*"/>
            </zipfileset>
            <zipfileset dir="${scripts.dir}" prefix="scripts" filemode="555" >
                <exclude name="**/id_rsa"/>
                <exclude name="**/.project"/>
                <exclude name="**/.classpath"/>
            </zipfileset>
            <zipfileset dir="${scripts.dir}" prefix="scripts" filemode="600">
                <include name="**/id_rsa"/>
            </zipfileset>
        </zip>
    </target>
	
    <target name="package-agent-simulator" depends="-init-package">
        <delete file="${dist.dir}/agent-simulator.zip"/>
        <zip destfile="${dist.dir}/agent-simulator.zip" duplicate="preserve">
            <zipfileset dir="${agent-simulator.dist.dir}">
                <exclude name="**/*.sh"/>
                <exclude name="**/vnetd"/>
                <exclude name="**/send_arp"/>
                <exclude name="**/vn"/>
                <exclude name="**/*.exp"/>
                <exclude name="**/id_rsa"/>
            </zipfileset>
            <zipfileset dir="${agent-simulator.dist.dir}" filemode="555">
                <include name="**/*.sh"/>
                <include name="**/vnetd"/>
                <include name="**/send_arp"/>
                <include name="**/vn"/>
                <include name="**/*.exp"/>
            </zipfileset>
            <zipfileset dir="${agent-simulator.dist.dir}" filemode="600">
                <include name="id_rsa"/>
            </zipfileset>
        </zip>
    </target>
	
    <target name="package-systemvm-premium" depends="-init-package">
        <zip destfile="${dist.dir}/systemvm-premium.zip" duplicate="preserve" update="true">
        	<!-- Console proxy now includes an agent shell, therefore we need to package agent related distribution -->
            <zipfileset dir="${thirdparty.dir}">
                <include name="xmlrpc-client-3.1.3.jar" />
                <include name="xmlrpc-common-3.1.3.jar" />
                <include name="ws-commons-util-1.0.2.jar" />
                <include name="log4j-1.2.15.jar" />
                <include name="apache-log4j-extras-1.0.jar" />
                <include name="gson-1.3.jar" />
                <include name="commons-httpclient-3.1.jar" />
                <include name="commons-logging-1.1.1.jar" />
                <include name="commons-collections-3.2.1.jar" />
                <include name="commons-codec-1.4.jar" />
                <include name="commons-pool-1.4.jar" />
                <include name="libvirt-0.4.2.jar" />
                <include name="jna.jar" />
                <include name="cglib-nodep-2.2.jar" />
            </zipfileset>
            <zipfileset dir="${jar.dir}">
                <include name="${agent.jar}" />
                <include name="${utils.jar}" />
                <include name="${core.jar}" />
            </zipfileset>
            <zipfileset dir="${console-proxy.dist.dir}">
                <exclude name="**/*.sh"/>
        	</zipfileset>
            <zipfileset dir="${console-proxy.dist.dir}" filemode="555">
                <include name="**/*.sh"/>
        	</zipfileset>
            <zipfileset dir="${console-proxy.dist.dir}/certs" prefix="certs" filemode="555">
                <include name="**/*.key"/>
                <include name="**/*.crt"/>
            </zipfileset>
            <zipfileset dir="${scripts.dir}/storage/secondary" prefix="scripts/storage/secondary" filemode="555" >
                <exclude name="**/id_rsa"/>
                <exclude name="**/.project"/>
                <exclude name="**/.classpath"/>
            </zipfileset>
        </zip>
    </target>

    <target name="package-systemvm-oss" depends="-init-package">
        <zip destfile="${dist.dir}/systemvm.zip" duplicate="preserve" update="true">
        	<!-- Console proxy now includes an agent shell, therefore we need to package agent related distribution -->
            <zipfileset dir="${thirdparty.dir}">
                <include name="xmlrpc-client-3.1.3.jar" />
                <include name="xmlrpc-common-3.1.3.jar" />
                <include name="ws-commons-util-1.0.2.jar" />
                <include name="log4j-1.2.15.jar" />
                <include name="apache-log4j-extras-1.0.jar" />
                <include name="gson-1.3.jar" />
                <include name="commons-httpclient-3.1.jar" />
                <include name="commons-logging-1.1.1.jar" />
                <include name="commons-collections-3.2.1.jar" />
                <include name="commons-codec-1.4.jar" />
                <include name="commons-pool-1.4.jar" />
                <include name="libvirt-0.4.2.jar" />
                <include name="jna.jar" />
                <include name="cglib-nodep-2.2.jar" />
            </zipfileset>
            <zipfileset dir="${jar.dir}">
                <include name="${agent.jar}" />
                <include name="${utils.jar}" />
                <include name="${core.jar}" />
            </zipfileset>
            <zipfileset dir="${console-proxy.dist.dir}">
                <exclude name="**/*.sh"/>
                <exclude name="**/certs/*"/>
        	</zipfileset>
            <zipfileset dir="${console-proxy.dist.dir}" filemode="555">
                <include name="**/*.sh"/>
        	</zipfileset>
            <zipfileset dir="${scripts.dir}/storage/secondary" prefix="scripts/storage/secondary" filemode="555" >
                <exclude name="**/id_rsa"/>
                <exclude name="**/.project"/>
                <exclude name="**/.classpath"/>
            </zipfileset>
        </zip>
    </target>

    <target name="package-kvm-domr-patch" depends="-init-package">
		<tar destfile="${kvm.domr.patch.dir}/patch.tar">
			<tarfileset dir="${scripts.dir}/network/domr/kvm/patches"
						filemode="755">
		    	<include name="**"/>
		 	</tarfileset>
		</tar>
		<gzip destfile="${kvm.domr.patch.dir}/patch.tgz" src="${kvm.domr.patch.dir}/patch.tar"/>
		<delete file="${kvm.domr.patch.dir}/patch.tar"/>
	</target>

    <target name="package-docs" depends="-init-package">
        <delete file="${dist.dir}/docs.zip"/>
        <zip destfile="${dist.dir}/docs.zip" compress="false">
            <fileset dir="${docs.dist.dir}"/>
        </zip>
    </target>
	
	<target name="package-test" depends="-init-package">
        <delete file="${publish.dir}/test.zip"/>
        <zip destfile="${publish.dir}/test.zip" compress="false">
            <zipfileset dir="${testclient.dist.dir}" filemode="555" />
        </zip>
    </target>

    <target name="clean-packages">
        <delete>
            <fileset dir="${dist.dir}" includes="*.zip"/>
        </delete>
    </target> 
        
    <target name="package-all" depends="package-client, package-agent, package-agent-simulator, package-usage, package-docs">
        <tstamp>
            <format property="package.date" pattern="yyyy-MM-dd"/>
        </tstamp>
        <zip destfile="${publish.dir}/cloud-${company.major.version}.${company.minor.version}.${company.patch.version}.${build.number}-${package.date}.zip" duplicate="preserve">
            <zipfileset dir="${dist.dir}" prefix="cloud-${company.major.version}.${company.minor.version}.${company.patch.version}.${build.number}-${package.date}" filemode="777">
                <include name="deploy-agent.sh"/>
                <include name="deploy-server.sh"/>
            </zipfileset>
            <zipfileset dir="${db.dist.dir}" prefix="cloud-${company.major.version}.${company.minor.version}.${company.patch.version}.${build.number}-${package.date}/db" filemode="777">
                <include name="deploy-db.sh"/>
            </zipfileset>
            <zipfileset dir="${db.dist.dir}" prefix="cloud-${company.major.version}.${company.minor.version}.${company.patch.version}.${build.number}-${package.date}/db">
                <include name="log4j.properties"/>
            	<include name="create-schema.sql"/>
            	<include name="init-data.sql"/>
            	<include name="create-index-fk.sql"/>
            	<include name="server-setup.xml"/>
            	<include name="create-database.sql"/>
            	<include name="templates.sql"/>
            </zipfileset>
            <zipfileset dir="${dist.dir}" prefix="cloud-${company.major.version}.${company.minor.version}.${company.patch.version}.${build.number}-${package.date}">
                <include name="agent.zip"/>
                <include name="client.zip"/>
                <include name="docs.zip"/>
            </zipfileset>
        </zip>
    </target>
    
    <target name="clean-zip">
        <delete dir="${dist.dir}">
            <include name="*.zip"/>
        </delete>
    </target>

	<target name="sendjarfiles-premium" depends="build-all, compile-testclient, compile-agent-simulator">
		<copy todir="${waf.artifacts}">
			<fileset dir="${target.dir}/jar" excludes="testclient.jar,agent-simulator.jar,cloud-server-extras.jar"/>
		</copy>
		<copy todir="${waf.artifacts}">
			<fileset dir="${target.dir}/jar"/>
			<globmapper from="testclient.jar" to="cloud-test.jar"/>
		</copy>
		<copy todir="${waf.artifacts}">
			<fileset dir="${target.dir}/jar"/>
			<globmapper from="agent-simulator.jar" to="cloud-agent-simulator.jar"/>
		</copy>
		<copy todir="${waf.artifacts}">
			<fileset dir="${target.dir}/jar"/>
			<globmapper from="cloud-server-extras.jar" to="cloud-premium.jar"/>
		</copy>
	</target>

</project>

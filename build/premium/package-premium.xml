<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 2008 Cloud.com, Inc. All Rights Reserved -->

<project name="Cloud Stack Package Premium" basedir=".">
  <description>
        This is a package.xml with tools to package the cloud stack distribution
    </description>

  <dirname property="base.dir" file="${ant.file.Cloud Stack Package Premium}/../.." />
  <property name="build.dir" location="${base.dir}/build" />
  <property name="patches.dir" location="${base.dir}/patches" />
  
  <import file="${build.dir}/premium/build-cloud-premium.xml" optional="false"/>
  <import file="${build.dir}/package.xml" optional="false" />

  <property name="dist.dir" location="${base.dir}/dist" />
  <property name="publish.dir" location="${dist.dir}" />
  <property name="client.dist.dir" location="${dist.dir}/client" />
  <property name="server.dist.dir" location="${dist.dir}/client" />
  <property name="agent.dist.dir" location="${dist.dir}/agent" />
  <property name="docs.dist.dir" location="${dist.dir}/docs" />
  <property name="db.dist.dir" location="${dist.dir}/db" />
  <property name="usage.dist.dir" location="${dist.dir}/usage" />
  <property name="kvm.domr.patch.dir" location="${scripts.dir}/vm/hypervisor/kvm/patch" />

  <target name="-init-package">
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${publish.dir}" />
  </target>

  <target name="package-server" depends="-init-package">
    <delete file="${dist.dir}/client.zip" />
    <zip destfile="${dist.dir}/client.zip" basedir="${server.dist.dir}" />
  </target>

  <target name="package-client" depends="-init-package">
    <delete file="${dist.dir}/client.zip" />
    <zip destfile="${dist.dir}/client.zip" basedir="${client.dist.dir}">
      <zipfileset dir="${client.dist.dir}">
        <exclude name="**/*.sh" />
      </zipfileset>
      <zipfileset dir="${client.dist.dir}" filemode="555">
        <include name="**/*.sh" />
      </zipfileset>
    </zip>
  </target>

  <target name="package-usage" depends="-init-package">
    <delete file="${dist.dir}/usage.zip" />
    <zip destfile="${dist.dir}/usage.zip" basedir="${usage.dist.dir}" />
  </target>

  <target name="package-agent" depends="-init-package, package-premium-systemvm,  build-xenserver-domr-patch, package-agent-common">
    <zip destfile="${dist.dir}/agent.zip" update="true" duplicate="preserve">
      <zipfileset dir="${jar.dir}">
        <include name="${core-premium.jar}" />
      </zipfileset>
      <zipfileset dir="${dist.dir}" prefix="scripts/vm/hypervisor/xenserver">
        <include name="patch.tgz" />
      </zipfileset>
      <zipfileset dir="${dist.dir}" prefix="vms" filemode="555">
        <include name="systemvm-premium.zip" />
      </zipfileset>
    </zip>
  </target>

  <target name="package-agent-simulator" depends="-init-package">
    <delete file="${dist.dir}/agent-simulator.zip" />
    <zip destfile="${dist.dir}/agent-simulator.zip" duplicate="preserve">
      <zipfileset dir="${agent-simulator.dist.dir}">
        <exclude name="**/*.sh" />
        <exclude name="**/vnetd" />
        <exclude name="**/send_arp" />
        <exclude name="**/vn" />
        <exclude name="**/*.exp" />
      </zipfileset>
      <zipfileset dir="${agent-simulator.dist.dir}" filemode="555">
        <include name="**/*.sh" />
        <include name="**/vnetd" />
        <include name="**/send_arp" />
        <include name="**/vn" />
        <include name="**/*.exp" />
      </zipfileset>
    </zip>
  </target>

  <target name="package-premium-systemvm" depends="-init-package, package-oss-systemvm">
    <zip destfile="${dist.dir}/systemvm-premium.zip" duplicate="preserve" update="true">
      <!-- Console proxy now includes an agent shell, therefore we need to package agent related distribution -->
      <zipfileset src="${dist.dir}/systemvm.zip" includes="**/*" />
      <zipfileset dir="${console-proxy.dist.dir}/certs" prefix="certs" filemode="555">
        <include name="**/*.key" />
        <include name="**/*.crt" />
      </zipfileset>
      <zipfileset dir="${console-proxy.dist.dir}">
        <include name="cloud-console-proxy-premium.jar" />
      </zipfileset>
      <zipfileset dir="${scripts.dir}/storage/secondary" prefix="scripts/storage/secondary" filemode="555">
        <exclude name="**/.project" />
        <exclude name="**/.classpath" />
      </zipfileset>
    </zip>
  </target>

  <target name="package-docs" depends="-init-package">
    <delete file="${dist.dir}/docs.zip" />
    <zip destfile="${dist.dir}/docs.zip" compress="false">
      <fileset dir="${docs.dist.dir}" />
    </zip>
  </target>

  <target name="package-test" depends="-init-package">
    <delete file="${publish.dir}/test.zip" />
    <zip destfile="${publish.dir}/test.zip" compress="false">
      <zipfileset dir="${testclient.dist.dir}" filemode="555" />
    </zip>
  </target>

  <target name="clean-packages">
    <delete>
      <fileset dir="${dist.dir}" includes="*.zip" />
    </delete>
  </target>

  <target name="package-all" depends="package-client, package-agent, package-agent-simulator, package-usage, package-docs">
    <tstamp>
      <format property="package.date" pattern="yyyy-MM-dd" />
    </tstamp>
    <zip destfile="${publish.dir}/cloud-${company.major.version}.${company.minor.version}.${company.patch.version}.${build.number}-${package.date}.zip" duplicate="preserve">
      <zipfileset dir="${dist.dir}" prefix="cloud-${company.major.version}.${company.minor.version}.${company.patch.version}.${build.number}-${package.date}" filemode="777">
        <include name="deploy-agent.sh" />
        <include name="deploy-server.sh" />
      </zipfileset>
      <zipfileset dir="${db.dist.dir}" prefix="cloud-${company.major.version}.${company.minor.version}.${company.patch.version}.${build.number}-${package.date}/db" filemode="777">
        <include name="deploy-db.sh" />
      </zipfileset>
      <zipfileset dir="${db.dist.dir}" prefix="cloud-${company.major.version}.${company.minor.version}.${company.patch.version}.${build.number}-${package.date}/db">
        <include name="log4j.properties" />
        <include name="create-schema.sql" />
        <include name="init-data.sql" />
        <include name="create-index-fk.sql" />
        <include name="server-setup.xml" />
        <include name="create-database.sql" />
        <include name="templates.sql" />
      </zipfileset>
      <zipfileset dir="${dist.dir}" prefix="cloud-${company.major.version}.${company.minor.version}.${company.patch.version}.${build.number}-${package.date}">
        <include name="agent.zip" />
        <include name="client.zip" />
        <include name="docs.zip" />
      </zipfileset>
    </zip>
  </target>

  <target name="clean-zip">
    <delete dir="${dist.dir}">
      <include name="*.zip" />
    </delete>
  </target>

  <target name="build-war-premium" depends="-init-package, build-war-oss" description="Compile the GWT client UI and builds WAR file.">

    <war destfile="${client.dist.dir}/client.war" webxml="${client.dir}/WEB-INF/web.xml" update="true">
      <lib dir="${jar.dir}">
        <include name="cloud-*.jar" />
      </lib>
    </war>
  </target>

  <target name="build-all" depends="build-opensource, build-premium, build-war-premium, package-premium-systemvm">
  </target>

  <target name="sendjarfiles" depends="compile-utils, compile-core, compile-server, compile-agent, compile-console-common, compile-testclient, compile-agent-simulator, compile-console-proxy, build-console-viewer, compile-premium, compile-core-premium, compile-usage, compile-console-proxy-premium">
    <copy todir="${waf.artifacts}">
      <fileset dir="${target.dir}/jar" excludes="testclient.jar,agent-simulator.jar,cloud-server-extras.jar" />
    </copy>
    <copy todir="${waf.artifacts}">
      <fileset dir="${target.dir}/jar" />
      <globmapper from="testclient.jar" to="cloud-test.jar" />
    </copy>
    <copy todir="${waf.artifacts}">
      <fileset dir="${target.dir}/jar" />
      <globmapper from="agent-simulator.jar" to="cloud-agent-simulator.jar" />
    </copy>
    <copy todir="${waf.artifacts}">
      <fileset dir="${target.dir}/jar" />
      <globmapper from="cloud-server-extras.jar" to="cloud-premium.jar" />
    </copy>
  </target>

</project>

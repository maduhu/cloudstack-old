<sanity>

<!-- Test case #3 - createUser command -->
	<command>
		<name>createUser</name>
		<testcase>3</testcase>
		<parameters>
			<item random="true" setparam="true">
			    <name>username</name>
			    <param>usernameparam</param>
			</item>
			<item>
			    <name>password</name>
				<value>alena123</value>
			</item>
			<item>
				<name>firstname</name>
				<value>admin</value>
			</item>
			<item>
				<name>lastname</name>
				<value>adminlastname</value>
			</item>
			<item>
				<name>email</name>
				<value>admin@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>userid</param>
			</item>
			<item getparam="true">
				<name>username</name>
				<param>usernameparam</param>
			</item>
			<item>
				<name>firstname</name>
				<value>admin</value>
			</item>
			<item>
				<name>lastname</name>
				<value>adminlastname</value>
			</item>
			<item>
				<name>email</name>
				<value>admin@gmail.com</value>
			</item>
			<item setparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
			<item>
				<name>domain</name>
				<value>ROOT</value>
			</item>
			<item>
				<name>created</name>
			</item>
			<item>
				<name>isdisabled</name>
				<value>false</value>
			</item>
		</returnvalue>
	</command>
	
	<!-- Test case #950 - listAccounts -->
	<command>
		<name>listAccounts</name>
		<testcase>950</testcase>
		<parameters>
			<item getparam="true">
			    <name>name</name>
				<param>accountname</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>accountid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>accountname</param>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
			<item>
				<name>domain</name>
				<value>ROOT</value>
			</item>
			<item>
				<name>receivedbytes</name>
				<value>0</value>
			</item>
			<item>
				<name>sentbytes</name>
				<value>0</value>
			</item>
			<item>
				<name>ipavailable</name>
			</item>
			<item>
				<name>vmavailable</name>
			</item>
			<item>
				<name>vmtotal</name>
				<value>0</value>
			</item>
			<item>
				<name>vmstopped</name>
				<value>0</value>
			</item>
			<item>
				<name>vmrunning</name>
				<value>0</value>
			</item>
			<item>
				<name>isdisabled</name>
				<value>false</value>
			</item>
			<item>
				<name>iscleanuprequired</name>
				<value>false</value>
			</item>
		</returnvalue>
	</command>	
	
	
	<!-- Test case #42 - register user command -->
	<command>
		<name>register</name>
		<testcase>42</testcase>
		<parameters>
			<item getparam="true">
			    <name>username</name>
				<param>usernameparam</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>apikey</name>
			</item>
			<item>
				<name>secretkey</name>
			</item>
		</returnvalue>
	</command>	
	
	<!-- Test case #6 - updateUser command -->
	<command>
		<name>updateUser</name>
		<testcase>6</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>userid</param>
			</item>
			<item random="true" setparam="true">
			    <name>username</name>
			    <param>newuser</param>
			</item>
		</parameters>
	</command>	
	
	<!-- Test case #5 - listUsers command -->
	<command>
		<name>listUsers</name>
		<testcase>5</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>userid</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>id</name>
				<param>userid</param>
			</item>
			<item getparam="true">
				<name>username</name>
				<param>newuser</param>
			</item>
			<item>
				<name>firstname</name>
				<value>admin</value>
			</item>
			<item>
				<name>lastname</name>
				<value>adminlastname</value>
			</item>
			<item>
				<name>email</name>
				<value>admin@gmail.com</value>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
			<item>
				<name>domain</name>
				<value>ROOT</value>
			</item>
			<item>
				<name>isdisabled</name>
				<value>false</value>
			</item>
			<item>
				<name>created</name>
			</item>	
		</returnvalue>
	</command>	
	
	<!-- Test case #428 - disableUser command -->
	<command>
		<name>disableUser</name>
		
		<testcase>428</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>userid</param>
			</item>
		</parameters>
	</command>	
	
	<!-- Test case #9 - enableUser command -->
	<command>
		<name>enableUser</name>
		<testcase>9</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>userid</param>
			</item>
		</parameters>
	</command>	
	
	<!-- Test case #10 - createDomain command -->
	<command>
		<name>createDomain</name>
		<testcase>10</testcase>
		<parameters>
			<item random="true" setparam="true">
			    <name>name</name>
			    <param>domainname</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>name</name>
				<param>domainname</param>
			</item>
			<item setparam="true">
				<name>id</name>
				<param>newdomainid</param>
			</item>
		</returnvalue>
	</command>	

	
	<!-- Test case #11 - listDomains command -->
	<command>
		<name>listDomains</name>
		<testcase>11</testcase>
		<parameters>
			<item getparam="true">
			    <name>name</name>
				<param>domainname</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>id</name>
				<param>newdomainid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>domainname</param>
			</item>
		</returnvalue>
	</command>	
	
<!-- Test case #952 - updateDomain command - edit domain name and verify that it was really updated-->
	<command>
		<name>updateDomain</name>
		<testcase>952</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>newdomainid</param>
			</item>
			<item random="true" setparam="true">
			    <name>name</name>
			    <param>newdomainname</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listDomains</name>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
			    <name>name</name>
				<param>newdomainname</param>
			</item>
		</parameters>
	</command>	
	
	
	<!-- Test case #654 - deleteDomain command -->
	<command>
		<name>deleteDomain</name>
		<testcase>654</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>newdomainid</param>
			</item>
		</parameters>
	</command>	
	
	
	<!-- Test case #27 - listTemplates command -->
	<command>
		<name>listTemplates</name>
		<testcase>27</testcase>
		<returnvalue list="true">
			<name>template</name>
			<element>0</element>
			<item setparam="true">
				<name>id</name>
				<param>centos52templateid</param>
		    </item>
			<item setparam="true">
				<name>name</name>
				<param>centos52templatename</param>
		    </item>
			<item setparam="true">
				<name>displaytext</name>
				<param>centos52templatedisplaytext</param>
		    </item>
			<item setparam="true">
				<name>ispublic</name>
				<param>centos52templateispublic</param>
		    </item>
			<item setparam="true">
				<name>requireshvm</name>
				<param>centos52templaterequireshvm</param>
		    </item>
			<item setparam="true">
				<name>bits</name>
				<param>centos52templatebits</param>
		    </item>
			<item setparam="true">
				<name>created</name>
				<param>centos52templatecreated</param>
		    </item>
			<item>
				<name>isready</name>
				<value>true</value>
		    </item>
			<item setparam="true">
				<name>passwordenabled</name>
				<param>centos52templatepasswordenabled</param>
		    </item>
		</returnvalue>
	</command>
	
	<command>
		<name>listTemplates</name>
		<parameters>
			<item getparam="true">
			    <name>name</name>
				<param>centos52templatename</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>id</name>
				<param>centos52templateid</param>
		    </item>
			<item getparam="true">
				<name>name</name>
				<param>centos52templatename</param>
		    </item>
			<item getparam="true">
				<name>displaytext</name>
				<param>centos52templatedisplaytext</param>
		    </item>
			<item getparam="true">
				<name>ispublic</name>
				<param>centos52templateispublic</param>
		    </item>
			<item getparam="true">
				<name>requireshvm</name>
				<param>centos52templaterequireshvm</param>
		    </item>
			<item getparam="true">
				<name>bits</name>
				<param>centos52templatebits</param>
		    </item>
			<item getparam="true">
				<name>created</name>
				<param>centos52templatecreated</param>
		    </item>
			<item>
				<name>isready</name>
				<value>true</value>
		    </item>
			<item getparam="true">
				<name>passwordenabled</name>
				<param>centos52templatepasswordenabled</param>
		    </item>
		</returnvalue>
	</command>
	
	<!-- Test case #28 - listServiceOffering command -->
	<command>
		<name>listServiceOfferings</name>
		<testcase>28</testcase>
		<parameters>
			<item>
			    <name>name</name>
				<value>Small</value>
			</item>
		</parameters>
		<returnvalue list="true">
		<name>serviceoffering</name>
		<element>0</element>
			<item setparam="true">
				<name>id</name>
				<param>smallofferingid</param>
			</item>
			<item setparam="true">
				<name>name</name>
				<param>smallofferingname</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>listServiceOfferings</name>
		<testcase>876</testcase>
		<parameters>
			<item>
			    <name>name</name>
				<value>Small Instance</value>
			</item>
		</parameters>
		<returnvalue list="true">
		<name>serviceoffering</name>
		<element>0</element>
			<item getparam="true">
				<name>id</name>
				<param>smallofferingid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>smallofferingname</param>
			</item>
			<item>
				<name>displaytext</name>
			</item>
			<item setparam="true">
				<name>cpunumber</name>
				<param>smallofferingcpunumber</param>
				<value>1</value>
			</item>
			<item setparam="true">
				<name>cpuspeed</name>
				<param>smallofferingcpuspeed</param>
				<value>500</value>
			</item>
			<item setparam="true">
				<name>memory</name>
				<param>smallofferingmemory</param>
				<value>512</value>
			</item>
			<item>
				<name>created</name>
			</item>
		</returnvalue>
	</command>
	
	
	<!-- Test case #39 - listZones command -->
	<command>
		<name>listZones</name>
		<testcase>39</testcase>
		<returnvalue list="true"> 
			<element>0</element>
			<name>zone</name>
			<item getparam="true">
				<name>id</name>
				<param>globalzoneid</param>
			</item>
			<item setparam="true">
				<name>name</name>
				<param>firstzonename</param>
				<value>ZONE1</value>
			</item>
			<item setparam="true">
				<name>dns1</name>
				<param>firstzonedns1</param>
				<value>72.52.126.11</value>
			</item>
		</returnvalue>
	</command>
	
	<!-- Test case #13 - deployVirtualMachine command -->
	<command>
		<name>deployVirtualMachine</name>
		<testcase>13</testcase>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item getparam="true">
			    <name>serviceofferingid</name>
				<param>smallofferingid</param>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item setparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
			<item setparam="true">
				<name>ipaddress</name>
				<param>vmipaddress</param>
			</item>
			<item>
				<name>created</name>
			</item>
			<item getparam="true">
				<name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item getparam="true">
				<name>zonename</name>
				<param>firstzonename</param>
			</item>
			<item>
				<name>haenable</name>
				<value>false</value>
			</item>
			<item>
				<name>state</name>
				<value>Running</value>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item getparam="true">
				<name>serviceofferingid</name>
				<param>smallofferingid</param>
			</item>
			<item getparam="true">
				<name>serviceofferingname</name>
				<param>smallofferingname</param>
			</item>
			<item getparam="true">
				<name>cpunumber</name>
				<param>smallofferingcpunumber</param>
			</item>
			<item getparam="true">
				<name>cpuspeed</name>
				<param>smallofferingcpuspeed</param>
			</item>
			<item getparam="true">
				<name>memory</name>
				<param>smallofferingmemory</param>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</returnvalue>
	</command>
	
	
	<!-- Test case #957 - listVirtualMachines command -->
	<command>
		<name>listVirtualMachines</name>
		<testcase>957</testcase>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
			    <name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
			<item getparam="true">
				<name>ipaddress</name>
				<param>vmipaddress</param>
			</item>
			<item>
				<name>created</name>
			</item>
			<item getparam="true">
				<name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item getparam="true">
				<name>zonename</name>
				<param>firstzonename</param>
			</item>
			<item>
				<name>haenable</name>
				<value>false</value>
			</item>
			<item>
				<name>state</name>
				<value>Running</value>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item getparam="true">
				<name>serviceofferingid</name>
				<param>smallofferingid</param>
			</item>
			<item getparam="true">
				<name>serviceofferingname</name>
				<param>smallofferingname</param>
			</item>
			<item getparam="true">
				<name>cpunumber</name>
				<param>smallofferingcpunumber</param>
			</item>
			<item getparam="true">
				<name>cpuspeed</name>
				<param>smallofferingcpuspeed</param>
			</item>
			<item getparam="true">
				<name>memory</name>
				<param>smallofferingmemory</param>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</returnvalue>
	</command>			
	
	<!-- Test case #35 - listRouters command -->
	<command>
		<name>listRouters</name>
		<testcase>35</testcase>
		<parameters>
			<item getparam="true">
				<name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue list="true">
			<name>router</name>
		    <element>0</element>
			<item setparam="true">
				<name>id</name>
				<param>routerid</param>
			</item>
			<item setparam="true">
				<name>publicip</name>
				<param>sourcenatpublicip</param>
			</item>
			<item getparam="true">
				<name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item getparam="true">
				<name>zonename</name>
				<param>firstzonename</param>
			</item>
			<item>
				<name>dns1</name>
				<value>72.52.126.11</value>
			</item>
			<item>
				<name>dns2</name>
				<value>72.52.126.12</value>
			</item>
			<item setparam="true">
				<name>networkdomain</name>
				<param>routernetworkdomain</param>
			</item>
			<item>
				<name>gateway</name>
			</item>
			<item setparam="true">
				<name>name</name>
				<param>routername</param>
			</item>
			<item>
				<name>podid</name>
			</item>
			<item>
				<name>privateip</name>
			</item>
			<item>
				<name>privatemacaddress</name>
			</item>
			<item>
				<name>privatenetmask</name>
			</item>
			<item setparam="true">
				<name>publicmacaddress</name>
				<param>routerpublicmacaddress</param>
			</item>
			<item setparam="true">
				<name>ipaddress</name>
				<param>routeripaddress</param>
			</item>
			<item setparam="true" >
				<name>macaddress</name>
				<param>routermacaddress</param>
			</item>
			<item>
				<name>created</name>
			</item>
			<item>
				<name>hostid</name>
			</item>
			<item>
				<name>state</name>
				<value>Running</value>
			</item>
		</returnvalue>
	</command>	
	
	<!-- Test case #546 - associateIpAddress command -->	
	<command>
		<name>associateIpAddress</name>
		<testcase>546</testcase>
		<parameters>
		<item getparam="true">
			<name>zoneid</name>
			<param>globalzoneid</param>
		</item>
		<item getparam="true">
			<name>account</name>
			<param>accountname</param>
		</item>
		</parameters>
		<returnvalue> 
			<item setparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
			<item>
				<name>allocated</name>
			</item>
			<item getparam="true">
				<name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item getparam="true">
				<name>zonename</name>
				<param>firstzonename</param>
			</item>
			<item>
				<name>issourcenat</name>
				<value>false</value>
			</item>
		</returnvalue>
	</command>
	
	<!--  LOAD BALANCING RULES SECTION -->
	
	<!-- Test case #986 - create a load balancer -->
	<command>
		<name>createLoadBalancer</name>
		<testcase>986</testcase>
		<parameters>
			<item random="true" setparam="true">
			    <name>name</name>
			    <param>lbname</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>sourcenatpublicip</param>
			</item>
			<item randomnumber="true" setparam="true">
			    <name>privateport</name>
				<param>privateport</param>
			</item>
			<item randomnumber="true" setparam="true">
			    <name>publicport</name>
				<param>publicport</param>
			</item>
			<item>
			    <name>algorithm</name>
				<value>roundrobin</value>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>lbid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>lbname</param>
			</item>
			<item getparam="true">
				<name>privateport</name>
				<param>privateport</param>
			</item>
			<item getparam="true">
				<name>publicport</name>
				<param>publicport</param>
			</item>
			<item>
				<name>algorithm</name>
				<value>roundrobin</value>
			</item>
			<item getparam="true">
				<name>publicip</name>
				<param>sourcenatpublicip</param>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
		</returnvalue>
	</command>	
	
	
	<!-- Test case #988 - listloadbalancers -->
	<command>
		<name>listLoadBalancers</name>
		<testcase>988</testcase>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
			    <name>account</name>
				<param>accountname</param>
			</item>
		</parameters>
	</command>
	
	
	<!-- Test case #989 - assignToLoadBalancer -->
	<command>
		<name>assignToLoadBalancer</name>
		
		<testcase>989</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>lbid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>account</name>
				<param>accountname</param>
			</item>
		</parameters>
	</command>	
	
	<!-- Test case #987 - deleteloadbalancer; make sure to return the lb rule after the verification -->
	<command>
		<name>deleteLoadBalancer</name>
		<testcase>987</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>lbid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listLoadBalancers</name>
		<empty>true</empty>
	</command>
	
	<command>
		<name>createLoadBalancer</name>
		<parameters>
			<item random="true" setparam="true"> 
			    <name>name</name>
			    <param>lbname</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>sourcenatpublicip</param>
			</item>
			<item randomnumber="true" setparam="true">
			    <name>privateport</name>
				<param>privateport</param>
			</item>
			<item randomnumber="true" setparam="true">
			    <name>publicport</name>
				<param>publicport</param>
			</item>
			<item>
			    <name>algorithm</name>
				<value>roundrobin</value>
			</item>
			<item getparam="true">
			    <name>account</name>
				<param>accountname</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>lbid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>lbname</param>
			</item>
			<item getparam="true">
				<name>privateport</name>
				<param>privateport</param>
			</item>
			<item getparam="true">
				<name>publicport</name>
				<param>publicport</param>
			</item>
			<item>
				<name>algorithm</name>
				<value>roundrobin</value>
			</item>
			<item getparam="true">
				<name>publicip</name>
				<param>sourcenatpublicip</param>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignToLoadBalancer</name>
		
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>lbid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>account</name>
				<param>accountname</param>
			</item>
		</parameters>
	</command>	
	
	
	<!-- Test case #991 - listLoadBalancerInstances; make sure to return the lb rule after the verification -->
	<command>
		<name>listLoadBalancerInstances</name>
		<testcase>991</testcase>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>lbid</param>
			</item>
		</parameters>
	</command>	
	
	<!-- Test case #990 - removeFromLoadBalancer -->
	<command>
		<name>removeFromLoadBalancer</name>
		
		<testcase>990</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>lbid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>account</name>
				<param>accountname</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listLoadBalancerInstances</name>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>lbid</param>
			</item>
		</parameters>
	</command>	
	
	<!--  PORT FORWARDING RULES SECTION -->
	
	<!-- Test case #965 - create a security group -->
	<command>
		<name>createSecurityGroup</name>
		<testcase>965</testcase>
		<parameters>
			<item random="true" setparam="true">
			    <name>name</name>
			    <param>pfgroupname</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>pfgroupname</param>
			</item>
			<item>
				<name>description</name>
				<value>none</value>
			</item>
		</returnvalue>
	</command>	
	
	<!-- Test case #972 - listSecurityGroups-->
	<command>
		<name>listSecurityGroups</name>
		<testcase>972</testcase>
		<parameters>
			<item getparam="true">
			    <name>name</name>
				<param>pfgroupname</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>pfgroupname</param>
			</item>
			<item>
				<name>description</name>
				<value>none</value>
			</item>
		</returnvalue>
	</command>	
	
	
	<!-- Test case #967 - create a network rule -->
	<command>
		<name>createNetworkRule</name>
		<testcase>967</testcase>
		<parameters>
			<item>
			    <name>publicport</name>
				<value>22</value>
			</item>
			<item>
			    <name>privateport</name>
				<value>22</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
			<item getparam="true">
				<name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
			<item>
				<name>publicport</name>
				<value>22</value>
			</item>
			<item>
				<name>privateport</name>
				<value>22</value>
			</item>
		</returnvalue>
	</command>	
	
	<!-- Test case #968 - listNetworkrules -->
	<command>
		<name>listNetworkRules</name>
		<testcase>968</testcase>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
	
	<!-- Test case #970 - assignSecurityGroup command -->
	<command>
		<name>assignSecurityGroup</name>
		
		<testcase>970</testcase>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>sourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	
	<!-- Test case #973 - listSecurityGroupsByVm command -->
	<command>
		<name>listSecurityGroupsByVM</name>
		<testcase>973</testcase>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>sourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	
	
	<!-- Test case #969 - deleteNetworkRule -->
	<command>
		<name>deleteNetworkRule</name>
		
		<testcase>969</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>pfruleid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listNetworkRules</name>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createNetworkRule</name>
		<parameters>
			<item>
			    <name>publicport</name>
				<value>22</value>
			</item>
			<item>
			    <name>privateport</name>
				<value>22</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
			<item getparam="true">
				<name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
			<item>
				<name>publicport</name>
				<value>22</value>
			</item>
			<item>
				<name>privateport</name>
				<value>22</value>
			</item>
		</returnvalue>
	</command>	
	
	<!-- Test case #971 - removeSecurityGroup command -->
	<command>
		<name>removeSecurityGroup</name>
		
		<testcase>971</testcase>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>sourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listSecurityGroupsByVM</name>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>sourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	

	<!-- Test case #966 - deleteSecurityGroup command -->
	<command>
		<name>deleteSecurityGroup</name>
		<testcase>966</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
	<!-- Test case #<add number> - listSecurityGroups command -->
	<command>
		<name>listSecurityGroups</name>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>pfgroupid</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
			<item getparam="true">
			    <name>name</name>
				<param>pfgroupname</param>
			</item>
		</parameters>
	</command>	
	
	
	<!-- Test case #15 - listVirtualMachines command -->
	<command>
		<name>listVirtualMachines</name>
		<testcase>15</testcase>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
			<item getparam="true">
				<name>ipaddress</name>
				<param>vmipaddress</param>
			</item>
			<item>
				<name>created</name>
			</item>
			<item getparam="true">
				<name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item getparam="true">
				<name>zonename</name>
				<param>firstzonename</param>
			</item>
			<item>
				<name>haenable</name>
				<value>false</value>
			</item>
			<item>
				<name>state</name>
				<value>Running</value>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item getparam="true">
				<name>serviceofferingid</name>
				<param>smallofferingid</param>
			</item>
			<item getparam="true">
				<name>serviceofferingname</name>
				<param>smallofferingname</param>
			</item>
			<item getparam="true">
				<name>cpunumber</name>
				<param>smallofferingcpunumber</param>
			</item>
			<item getparam="true">
				<name>cpuspeed</name>
				<param>smallofferingcpuspeed</param>
			</item>
			<item getparam="true">
				<name>memory</name>
				<param>smallofferingmemory</param>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</returnvalue>
	</command>
	
	
	<!-- Test case #16 - rebootVirtualMachine command; verfiy that machine is in Running state after it's rebooted -->
	<command>
		<name>rebootVirtualMachine</name>
		<testcase>16</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listVirtualMachines</name>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>state</name>
				<value>Running</value>
			</item>
		</returnvalue>
	</command>
	
	
	<!-- Test case #17 - stopVirtualMachine command; verify that machine is in Stopped state after it's stopped -->
	<command>
		<name>stopVirtualMachine</name>
		<testcase>17</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listVirtualMachines</name>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>state</name>
				<value>Stopped</value>
			</item>
		</returnvalue>
	</command>
	
	
<!-- VOLUME COMMANDS -->	

<!--  listVolumes command -->
	<command>
		<name>listVolumes</name>
		<parameters>
			<item getparam="true">
				<name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item>
				<name>type</name>
				<value>ROOT</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>rootvolumeid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>listVolumes</name>
		<parameters>
			<item getparam="true">
				<name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item>
				<name>type</name>
				<value>DATADISK</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>datavolumeid</param>
			</item>
		</returnvalue>
	</command>
	
	<!--  Detach volume command - detach volume from the vm and make sure that you don't see it in the list of volumes for this vm -->
	<command>
		<name>detachVolume</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>datavolumeid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listVolumes</name>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
				<name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item>
				<name>type</name>
				<value>DATADISK</value>
			</item>
		</parameters>
	</command>
	
	
	<!--  Create volume command - create a volume and make sure that it appeared in the list -->
	<command>
		<name>createVolume</name>
		<testcase>1026</testcase>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
			<item random="true">
				<name>name</name>
			</item>
			<item getparam="true">
				<name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>diskofferingid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>datavolumeid</param>
			</item>
		</returnvalue>
	</command>	
	
	
	<!--  Attach volume command - attach volume from to the vm and make sure that you see it in the list of volumes for this vm -->
	<command>
		<name>attachVolume</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>datavolumeid</param>
			</item>
			<item getparam="true">
				<name>virtualmachineid</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listVolumes</name>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
				<name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item>
				<name>type</name>
				<value>DATADISK</value>
			</item>
		</parameters>
	</command>
	
	
	<!--  Delete volume command - delete volume and make sure that you don't see it in the list of volumes any more -->
	<command>
		<name>createVolume</name>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
			<item random="true">
				<name>name</name>
			</item>
			<item getparam="true">
				<name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>diskofferingid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>datavolumeid1</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>deleteVolume</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>datavolumeid1</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listVolumes</name>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>datavolumeid1</param>
			</item>
		</parameters>
	</command>	
	

<!--  SNAPSHOT COMMANDS -->	
	<!-- Test case #<> - createSnapshot command; verify that snapshot got created -->
	<command>
		<name>createSnapshot</name>
		<parameters>
			<item getparam="true">
				<name>volumeid</name>
				<param>datavolumeid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>snapshotid1</param>
			</item>
			<item getparam="true">
				<name>volumeid</name>
				<param>datavolumeid</param>
			</item>
			<item>
				<name>created</name>
			</item>
			<item>
				<name>name</name>
			</item>
			<item>
				<name>path</name>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>createSnapshot</name>
		<parameters>
			<item getparam="true">
				<name>volumeid</name>
				<param>datavolumeid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>snapshotid2</param>
			</item>
			<item getparam="true">
				<name>volumeid</name>
				<param>datavolumeid</param>
			</item>
			<item>
				<name>created</name>
			</item>
			<item>
				<name>name</name>
			</item>
			<item>
				<name>path</name>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>listSnapshots</name>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
				<name>virtualmachineid</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<!-- Test case #25 - rollBackToSnapshot command; verify that you got true -->
	<command>
		<name>rollbackToSnapshot</name>
		<testcase>25</testcase>
		
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>snapshotid2</param>
			</item>
		</parameters>
	</command>
	
	<!-- Test case #24 - deleteSnapshot command; verify that you got true, and listSnapshots doesn't display anything -->
	<command>
		<name>deleteSnapshot</name>
		<testcase>24</testcase>
		
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>snapshotid1</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>deleteSnapshot</name>
		<testcase>24</testcase>
		
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>snapshotid2</param>
			</item>
		</parameters>
	</command>
	
	<!-- Test case #26 - listSnapshots command -->
	<command>
		<name>listSnapshots</name>
		<testcase>26</testcase>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
				<name>virtualmachineid</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<!-- Test case #958 - createTemplate command -->
	<command>
		<name>createTemplate</name>
		<testcase>958</testcase>
		<parameters>
			<item getparam="true">
				<name>volumeid</name>
				<param>datavolumeid</param>
			</item>
			<item random="true" setparam="true">
				<name>name</name>
				<param>privatetemplatename</param>
			</item>
			<item>
				<name>displaytext</name>
				<value>newtext</value>
			</item>
			<item>
				<name>osTypeId</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>privatetemplateid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>privatetemplatename</param>
			</item>
			<item>
				<name>ispublic</name>
				<value>false</value>
			</item>
			<item>
				<name>requireshvm</name>
				<value>false</value>
			</item>
			<item>
				<name>bits</name>
				<value>64</value>
			</item>
			<item>
				<name>isready</name>
				<value>true</value>
			</item>
			<item>
				<name>created</name>
			</item>
			<item>
				<name>passwordenabled</name>
				<value>false</value>
			</item>
		</returnvalue>
	</command>
	
	<!-- Test case #27 - listTemplates command -->
	<command>
		<name>listTemplates</name>
		<testcase>27</testcase>
		<parameters>
			<item getparam="true">
				<name>name</name>
				<param>privatetemplatename</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>id</name>
				<param>privatetemplateid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>privatetemplatename</param>
			</item>
			<item>
				<name>ispublic</name>
				<value>false</value>
			</item>
			<item>
				<name>requireshvm</name>
				<value>false</value>
			</item>
			<item>
				<name>bits</name>
				<value>64</value>
			</item>
			<item>
				<name>isready</name>
				<value>true</value>
			</item>
			<item>
				<name>created</name>
			</item>
			<item>
				<name>passwordenabled</name>
				<value>false</value>
			</item>
		</returnvalue>
	</command>
	
	<!-- Test case #959 - deleteTemplate command -->
	<command>
		<name>deleteTemplate</name>
		<testcase>959</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>privatetemplateid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listTemplates</name>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
				<name>name</name>
				<param>privatetemplatename</param>
			</item>
		</parameters>
	</command>
	
	
	<!-- Test case #20 - changeServiceOffering command; make sure that vm has correct service offering assigned -->
	<command>
		<name>changeServiceForVirtualMachine</name>
		
		<testcase>20</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item>
				<name>serviceofferingid</name>
				<value>2</value>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listVirtualMachines</name>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>state</name>
				<value>Stopped</value>
			</item>
			<item>
				<name>serviceofferingid</name>
				<value>2</value>
			</item>
		</returnvalue>
	</command>
	
	
	<!-- Test case #19 - resetpassword for virtual machine; make sure the machine is in Running state after it comes back -->
	<command>
		<name>resetPasswordForVirtualMachine</name>
		
		<testcase>19</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item>
				<name>password</name>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>listVirtualMachines</name>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>state</name>
				<value>Stopped</value>
			</item>
		</returnvalue>
	</command>
	
	<!-- Test case #18 - stop vm than start it; verify that VM status is Running -->
	<command>
		<name>listVirtualMachines</name>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>state</name>
				<value>Stopped</value>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>startVirtualMachine</name>
		<testcase>18</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
			<item getparam="true">
				<name>ipaddress</name>
				<param>vmipaddress</param>
			</item>
			<item>
				<name>created</name>
			</item>
			<item getparam="true">
				<name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item getparam="true">
				<name>zonename</name>
				<param>firstzonename</param>
			</item>
			<item>
				<name>haenable</name>
				<value>false</value>
			</item>
			<item>
				<name>state</name>
				<value>Running</value>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>serviceofferingid</name>
				<value>2</value>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>listVirtualMachines</name>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>state</name>
				<value>Running</value>
			</item>
		</returnvalue>
	</command>
	
	<!-- Test case #21- enable/disable HA for the VM; verify that HA is enabled -->
	<command>
		<name>updateVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item>
				<name>haenable</name>
				<value>true</value>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listVirtualMachines</name>
		<testcase>21</testcase>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>haenable</name>
				<value>true</value>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>updateVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item>
				<name>haenable</name>
				<value>false</value>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listVirtualMachines</name>
		<testcase>21</testcase>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>haenable</name>
				<value>false</value>
			</item>
		</returnvalue>
	</command>
	
	
	
	<!-- Test case #547- list IP addresses for the account -->
	<command>
		<name>listPublicIpAddresses</name>
		<testcase>547</testcase>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
		</parameters>
		<returnvalue>
		</returnvalue>
	</command>
	
	
	<!-- Test case #548- disassociate ip address -->
	<command>
		<name>disassociateIpAddress</name>
		<testcase>548</testcase>
		<parameters>
			<item getparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
		</parameters>
	</command>
	
	<!-- Test case #36- reboot router -->
	<command>
		<name>rebootRouter</name>
		<testcase>36</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>routerid</param>
			</item>
		</parameters>
	</command>
	
	<!-- Test case #37- stop router -->
	<command>
		<name>stopRouter</name>
		<testcase>37</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>routerid</param>
			</item>
		</parameters>
	</command>
	
	<!-- Test case #38- start router -->
	<command>
		<name>startRouter</name>
		<testcase>38</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>routerid</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>id</name>
				<param>routerid</param>
			</item>
			<item getparam="true">
				<name>publicip</name>
				<param>sourcenatpublicip</param>
			</item>
			<item getparam="true">
				<name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item getparam="true">
				<name>zonename</name>
				<param>firstzonename</param>
			</item>
			<item getparam="true">
				<name>dns1</name>
				<param>firstzonedns1</param>
			</item>
			<item getparam="true">
				<name>networkdomain</name>
				<param>routernetworkdomain</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>routername</param>
			</item>
			<item>
				<name>podid</name>
			</item>
			<item>
				<name>privateip</name>
			</item>
			<item>
				<name>privatemacaddress</name>
			</item>
			<item>
				<name>privatenetmask</name>
			</item>
			<item getparam="true">
				<name>publicmacaddress</name>
				<param>routerpublicmacaddress</param>
			</item>
			<item getparam="true">
				<name>ipaddress</name>
				<param>routeripaddress</param>
			</item>
			<item getparam="true">
				<name>macaddress</name>
				<param>routermacaddress</param>
			</item>
			<item>
				<name>created</name>
			</item>
			<item>
				<name>hostid</name>
			</item>
			<item>
				<name>state</name>
				<value>Running</value>
			</item>
		</returnvalue>
	</command>
	
	<!-- Test case #40- list events -->
	<command>
		<name>listEvents</name>
		<testcase>40</testcase>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
		</parameters>
	</command>
	
	<!-- Test case #14- destroy virtualMachine and verify its state -->
	<command>
		<name>destroyVirtualMachine</name>
		<testcase>14</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listVirtualMachines</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>state</name>
				<value>Destroyed</value>
			</item>
		</returnvalue>
	</command>
	
	<!-- Test case #22- recover destroyed virtualMachine and verify that it's state is Stopped after that -->
	<command>
		<name>recoverVirtualMachine</name>
		<testcase>22</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listVirtualMachines</name>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>state</name>
				<value>Stopped</value>
			</item>
		</returnvalue>
	</command>
	
	<!-- Test case #549- listConfigurations command -->
	<command>
		<name>listConfigurations</name>
		<testcase>549</testcase>
		<empty>false</empty>
	</command>	
	
	<!-- Test case #878- listConfiguarations command with category parameter-->
	<command>
		<name>listConfigurations</name>
		<testcase>878</testcase>
		<empty>false</empty>
		<parameters>
			<item>
				<name>category</name>
				<value>advanced</value>
			</item>
		</parameters>
	</command>
	
	
	<!-- Test case #550- udpateConfiguration and make sure that the value got updated-->
	<command>
		<name>updateConfiguration</name>
		<testcase>550</testcase>
		<parameters>
			<item>
				<name>name</name>
				<value>update.wait</value>
			</item>
			<item>
				<name>value</name>
				<value>35</value>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listConfigurations</name>
		<parameters>
			<item>
				<name>name</name>
				<value>update.wait</value>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>value</name>
				<value>35</value>
			</item>
		</returnvalue>
	</command>	
	
	
	<!-- Test case #552- list pods command-->
	<command>
		<name>listPods</name>
		<testcase>552</testcase>
		<parameters>
		</parameters>
		<returnvalue>
		</returnvalue>
	</command>	
	
	
<!-- Test case #951 - updateAccount command -->
	<command>
		<name>createUser</name>
		<testcase>3</testcase>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>jack12</value>
			</item>
			<item>
				<name>firstname</name>
				<value>jack12</value>
			</item>
			<item>
				<name>lastname</name>
				<value>jacklastname</value>
			</item>
			<item>
				<name>email</name>
				<value>jack@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>account</name>
				<param>accountname1</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>listAccounts</name>
		<parameters>
			<item getparam="true">
			    <name>name</name>
				<param>accountname1</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>accountid1</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>updateAccount</name>
		<testcase>951</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>accountid1</param>
			</item>
			<item random="true" setparam="true">
			    <name>name</name>
			    <param>updatedname</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listAccounts</name>
		<parameters>
			<item getparam="true">
			    <name>name</name>
				<param>updatedname</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>accountid1</param>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>updatedname</param>
			</item>
		</returnvalue>
	</command>	
	
<!-- Test case #7 - disableAccount command -->
	<command>
		<name>disableAccount</name>
		<testcase>7</testcase>
		
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>accountid1</param>
			</item>
		</parameters>
	</command>	
	
	
<!-- Test case #8 - enableAccount command -->
	<command>
		<name>enableAccount</name>
		<testcase>8</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>accountid1</param>
			</item>
		</parameters>
	</command>		
	
	
<!-- Test case #953 - createLimit command -->	
	<command>
		<name>createResourceLimit</name>
		<testcase>953</testcase>
		<parameters>
			<item>
			    <name>type</name>
				<value>public_ip</value>
			</item>
			<item>
			    <name>max</name>
				<value>300</value>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>limitid</param>
			</item>
		</returnvalue>
	</command>		
	
	<!-- Test case #956 - listLimits command -->	
	<command>
		<name>listResourceLimits</name>
		<testcase>956</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>limitid</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>max</name>
				<value>300</value>
			</item>
		</returnvalue>
	</command>		
	
<!-- Test case #954 - updateLimit command -->	
	<command>
		<name>updateResourceLimit</name>
		<testcase>954</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>limitid</param>
			</item>
			<item>
			    <name>max</name>
				<value>65</value>
			</item>
		</parameters>
	</command>		
	
	<command>
		<name>listResourceLimits</name>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>limitid</param>
			</item>
		</parameters>
		<returnvalue>
			<item>
				<name>max</name>
				<value>65</value>
			</item>
		</returnvalue>
	</command>	
	
	<!-- Test case #955 - deleteLimit command -->	
	<command>
		<name>deleteResourceLimit</name>
		<testcase>955</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>limitid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listResourceLimits</name>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>limitid</param>
			</item>
			<item>
			    <name>type</name>
				<value>public_ip</value>
			</item>
		</parameters>
	</command>	
	
	
	<!-- Test case #932 - createDiskOfferings command -->
	<command>
		<name>createDiskOffering</name>
		<testcase>932</testcase>
		<parameters>
			<item random="true" setparam="true">
			    <name>name</name>
			    <param>newdiskname</param>
			</item>
			<item>
			    <name>description</name>
				<value>newdiskdesc</value>
			</item>
			<item>
			    <name>disksize</name>
				<value>1024</value>
			</item>
			<item>
			    <name>displaytext</name>
				<value>volumedisplay</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>diskid</param>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>newdiskname</param>
			</item>
			<item>
			    <name>displaytext</name>
				<value>volumedisplay</value>
			</item>
			<item>
			    <name>disksize</name>
				<value>1024</value>
			</item>
			<item>
			    <name>ismirrored</name>
				<value>false</value>
			</item>
		</returnvalue>
	</command>
	
		
		
	<!-- Test case #934 - listDiskOfferings command -->
	<command>
		<name>listDiskOfferings</name>
		<testcase>934</testcase>
		<empty>false</empty>
		<parameters>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
			<item>
			    <name>name</name>
				<value>newdisk</value>
			</item>
		</parameters>
	</command>	
	
	
	<!-- Test case # - updateDiskOffering command; verify that name, display name were set -->
	<command>
		<name>updateDiskOffering</name>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>diskid</param>
			</item>
			<item random="true" setparam="true">
			    <name>name</name>
			    <param>newdiskname</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listDiskOfferings</name>
		<parameters>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
			<item getparam="true">
			    <name>name</name>
				<param>newdiskname</param>
			</item>
		</parameters>
		<returnvalue>
			<item getparam="true">
				<name>name</name>
				<param>newdiskname</param>
			</item>
		</returnvalue>
	</command>	

	
	<!-- Test case #933 - deleteDiskOffering command; verify that disk was deleted -->
	<command>
		<name>deleteDiskOffering</name>
		<testcase>933</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>diskid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listDiskOfferings</name>
		<empty>true</empty>
		<parameters>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
			<item getparam="true">
			    <name>id</name>
				<param>diskid</param>
			</item>
		</parameters>
	</command>	

	
<!-- Test case #4 - deleteUser command -->
	<command>
		<name>deleteUser</name>
		<testcase>4</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>userid</param>
			</item>
		</parameters>
	</command>	
	
<!-- Test case #750 - listAlerts command -->
	<command>
		<name>listAlerts</name>
		<testcase>750</testcase>
		<empty>false</empty>
	</command>
	
<!-- Test case #974 - listCapacity command -->
	<command>
		<name>listCapacity</name>
		<testcase>974</testcase>
		<empty>false</empty>
	</command>
	
	<!-- Test case #975 - listHosts command -->
	<command>
		<name>listHosts</name>
		<empty>false</empty>
		<testcase>975</testcase>
	</command>

	
	<!-- Test case #977 - reconnect command -->
	<command>
		<name>reconnectHost</name>
		<testcase>977</testcase>
		<parameters>
			<item>
			    <name>id</name>
				<value>2</value>
			</item>
		</parameters>
	</command>
	
	
	<!-- Test case #960 - listIsos command -->
	<command>
		<name>listIsos</name>
		<testcase>960</testcase>
		<empty>true</empty>
	</command>
	
	<!-- Test case #962 - createServiceOffering command -->
	<command>
		<name>createServiceOffering</name>
		<testcase>962</testcase>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>displaytext</name>
				<value>newoff</value>
			</item>
			<item>
			    <name>cpunumber</name>
				<value>1</value>
			</item>
			<item>
			    <name>cpuspeed</name>
				<value>200</value>
			</item>
			<item>
			    <name>memory</name>
				<value>256</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
			    <name>id</name>
				<param>soid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>listServiceOfferings</name>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>soid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>newofferingid</param>
			</item>
			<item>
				<name>displaytext</name>
				<value>newoff</value>
			</item>
			<item>
				<name>cpunumber</name>
				<value>1</value>
			</item>
			<item>
				<name>cpuspeed</name>
				<value>200</value>
			</item>
			<item>
				<name>memory</name>
				<value>256</value>
			</item>
			<item>
				<name>created</name>
			</item>
		</returnvalue>
	</command>
	
	
	<!-- Test case #964 - updateServiceOffering command -->
	<command>
		<name>updateServiceOffering</name>
		<testcase>964</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>newofferingid</param>
			</item>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>displaytext</name>
				<value>display</value>
			</item>
		</parameters>
	</command>
	
	
	<command>
		<name>listServiceOfferings</name>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>newofferingid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>newofferingid</param>
			</item>
			<item>
				<name>displaytext</name>
				<value>display</value>
			</item>
			<item>
				<name>cpunumber</name>
				<value>1</value>
			</item>
			<item>
				<name>cpuspeed</name>
				<value>200</value>
			</item>
			<item>
				<name>memory</name>
				<value>256</value>
			</item>
			<item>
				<name>created</name>
			</item>
		</returnvalue>
	</command>
	
	
	<!-- Test case #963 - deleteServiceOffering command -->
	<command>
		<name>deleteServiceOffering</name>
		<testcase>963</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>newofferingid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listServiceOfferings</name>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>newofferingid</param>
			</item>
		</parameters>
	</command>
	
</sanity>
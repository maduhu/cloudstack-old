<securitygroups>

<!--Test case 879 - create security group with the same name for different accounts -->
	<command>
		<name>createUser</name>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>firstname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>lastname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>email</name>
				<value>apiuser@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>userid</param>
			</item>
			<item setparam="true">
				<name>username</name>
				<param>usernamevar</param>
			</item>
			<item setparam="true">
				<name>account</name>
				<param>accountvar</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>register</name>
		<parameters>
			<item getparam="true">
			    <name>username</name>
				<param>usernamevar</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>apikey</name>
				<param>apikey</param>
			</item>
			<item setparam="true">
				<name>secretkey</name>
				<param>secretkey</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>createSecurityGroup</name>
		<usercommand>true</usercommand>
		<parameters>
			<item random="true" setparam="true">
			    <name>name</name>
				<param>879group</param>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createUser</name>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>apiuser1</value>
			</item>
			<item>
				<name>firstname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>lastname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>email</name>
				<value>apiuser@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>userid1</param>
			</item>
			<item setparam="true">
				<name>username</name>
				<param>usernamevar1</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>register</name>
		<parameters>
			<item getparam="true">
			    <name>username</name>
				<param>usernamevar1</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>apikey</name>
				<param>apikey</param>
			</item>
			<item setparam="true">
				<name>secretkey</name>
				<param>secretkey</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>createSecurityGroup</name>
		<testcase>879</testcase>
		<usercommand>true</usercommand>
		<parameters>
			<item getparam="true">
			    <name>name</name>
				<param>879group</param>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
		</parameters>
	</command>	

<!-- Test case 880 - try to create 2 groups with the same name by the same account - should fail -->	
	<command>
		<name>createSecurityGroup</name>
		<usercommand>true</usercommand>
		<parameters>
			<item random="true" setparam="true">
			    <name>name</name>
				<param>duplicatedgroup</param>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createSecurityGroup</name>
		<usercommand>true</usercommand>
		<testcase>880</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
			    <name>name</name>
				<param>duplicatedgroup</param>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
		</parameters>
	</command>	
	
<!-- Test case 881 - try to create the security group with non-existing domain - should fail -->	
	<command>
		<name>createSecurityGroup</name>
		<error>true</error>
		<testcase>881</testcase>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
			<item>
			    <name>domainid</name>
				<value>1000000000</value>
			</item>
			<item>
			    <name>account</name>
				<value>admin</value>
			</item>
		</parameters>
	</command>	
	
<!-- Test case 883 - try to create a rule and assign it to non-existing security group - should fail -->	
	<command>
		<name>createNetworkRule</name>
		<testcase>883</testcase>
		<error>true</error>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item>
			    <name>securitygroupid</name>
				<value>100000000</value>
			</item>
		</parameters>
	</command>	
	
<!-- Test case 884 - try to create a rule with private port of of range 1...65535 - should fail -->
	<command>
		<name>createSecurityGroup</name>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
			<item>
			    <name>account</name>
				<value>admin</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>createNetworkRule</name>
		<error>true</error>
		<testcase>884</testcase>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
				<value>22</value>
			</item>
			<item>
			    <name>privateport</name>
				<value>0</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createNetworkRule</name>
		<error>true</error>
		<testcase>884</testcase>
		<parameters>
			<item>
			    <name>publicport</name>
				<value>22</value>
			</item>
			<item>
			    <name>privateport</name>
				<value>65536</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
<!-- Test case 885 - try to create a rule with private port of of range 1...65535 - should fail -->	
	<command>
		<name>createNetworkRule</name>
		<error>true</error>
		<testcase>885</testcase>
		<parameters>
			<item>
			    <name>publicport</name>
				<value>0</value>
			</item>
			<item>
			    <name>privateport</name>
				<value>34</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createNetworkRule</name>
		<error>true</error>
		<testcase>885</testcase>
		<parameters>
			<item>
			    <name>publicport</name>
				<value>65536</value>
			</item>
			<item>
			    <name>privateport</name>
				<value>34</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
	<!-- Test case 886 - try to create a rule with any other port than tcp/udp - should fail -->	
	<command>
		<name>createNetworkRule</name>
		<testcase>886</testcase>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item>
			    <name>protocol</name>
				<value>tcp</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createNetworkRule</name>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item>
			    <name>protocol</name>
				<value>udp</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createNetworkRule</name>
		<testcase>886</testcase>
		<error>true</error>
		<parameters>
			<item>
			    <name>publicport</name>
				<value>56</value>
			</item>
			<item>
			    <name>privateport</name>
				<value>34</value>
			</item>
			<item>
			    <name>protocol</name>
				<value>tcpafsadfsdfaf</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
<!-- Test case 887 - try to create 2 same rules which differ only by protocol -->	
	<command>
		<name>createNetworkRule</name>
		<testcase>887</testcase>
		<parameters>
			<item randomnumber="true" setparam="true">
			    <name>publicport</name>
				<param>port</param>
			</item>
			<item getparam="true">
			    <name>privateport</name>
				<param>port</param>
			</item>
			<item>
			    <name>protocol</name>
				<value>tcp</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createNetworkRule</name>
		<testcase>887</testcase>
		<parameters>
			<item getparam="true">
			    <name>publicport</name>
				<param>port</param>
			</item>
			<item getparam="true">
			    <name>privateport</name>
				<param>port</param>
			</item>
			<item>
			    <name>protocol</name>
				<value>udp</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
<!-- Test case 888 - try to create 2 absolutely the same rules - negative case -->	
	<command>
		<name>createNetworkRule</name>
		<testcase>888</testcase>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
				<param>port</param>
			</item>
			<item getparam="true">
			    <name>privateport</name>
				<param>port</param>
			</item>
			<item>
			    <name>protocol</name>
				<value>tcp</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createNetworkRule</name>
		<testcase>888</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
			    <name>publicport</name>
				<param>port</param>
			</item>
			<item getparam="true">
			    <name>privateport</name>
				<param>port</param>
			</item>
			<item>
			    <name>protocol</name>
				<value>tcp</value>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	

<!-- Test case 889 - try list network rules with incorrect group id - negative case -->
	<command>
		<name>listNetworkRules</name>
		<testcase>889</testcase>
		<error>true</error>
		<parameters>
			<item>
			    <name>securitygroupid</name>
				<value>3000000</value>
			</item>
		</parameters>
	</command>	
	
<!-- Test case 890 - try list network rules with groupid belonging to another user - negative case -->	
	<command>
		<name>createUser</name>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>firstname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>lastname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>email</name>
				<value>apiuser@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>userid</param>
			</item>
			<item setparam="true">
				<name>username</name>
				<param>usernamevar</param>
			</item>
			<item setparam="true">
				<name>account</name>
				<param>accountvar</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>register</name>
		<parameters>
			<item getparam="true">
			    <name>username</name>
				<param>usernamevar</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>apikey</name>
				<param>apikey</param>
			</item>
			<item setparam="true">
				<name>secretkey</name>
				<param>secretkey</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>createSecurityGroup</name>
		<usercommand>true</usercommand>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupiduser1</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>createNetworkRule</name>
		<usercommand>true</usercommand>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupiduser1</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createUser</name>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>apiuser1</value>
			</item>
			<item>
				<name>firstname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>lastname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>email</name>
				<value>apiuser@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>userid1</param>
			</item>
			<item setparam="true">
				<name>username</name>
				<param>usernamevar1</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>register</name>
		<parameters>
			<item getparam="true">
			    <name>username</name>
				<param>usernamevar1</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>apikey</name>
				<param>apikey</param>
			</item>
			<item setparam="true">
				<name>secretkey</name>
				<param>secretkey</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>listNetworkRules</name>
		<testcase>890</testcase>
		<error>true</error>
		<usercommand>true</usercommand>
		<parameters>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupiduser1</param>
			</item>
		</parameters>
	</command>
	

<!-- Test case 891 - try to delete network rule with wrong id - negative case -->
	<command>
		<name>deleteNetworkRule</name>
		<testcase>891</testcase>
		<error>true</error>
		<parameters>
			<item>
			    <name>id</name>
				<value>8900988</value>
			</item>
		</parameters>
	</command>	
	
<!-- Test case 892 - delete network rule from the group assigned to the running vm-->
	<command>
		<name>deployVirtualMachine</name>
		
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>associateIpAddress</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
		</parameters>
		<returnvalue> 
			<item setparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>createSecurityGroup</name>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
			<item>
			    <name>account</name>
				<value>admin</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>createNetworkRule</name>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>deleteNetworkRule</name>
		<testcase>892</testcase>
		
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>pfruleid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listNetworkRules</name>
		<testcase>892</testcase>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	

<!-- Test case 893 - delete network rule from the group assigned to the stopped vm-->
	<command>
		<name>createNetworkRule</name>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>stopVirtualMachine</name>
		<testcase>17</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>deleteNetworkRule</name>
		<testcase>893-1</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>pfruleid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listNetworkRules</name>
		<testcase>893-2</testcase>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	

<!-- Test case 895 - delete network rule when domR is stopped -->	
	<command>
		<name>listRouters</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue list="true">
			<name>router</name>
		    <element>0</element>
			<item setparam="true">
				<name>id</name>
				<param>routerid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>deployVirtualMachine</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>associateIpAddress</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
		</parameters>
		<returnvalue> 
			<item setparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>createSecurityGroup</name>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>createNetworkRule</name>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>stopRouter</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>routerid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>deleteNetworkRule</name>
		<testcase>895-1</testcase>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>pfruleid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listNetworkRules</name>
		<testcase>895-2</testcase>
		<empty>true</empty>
		<parameters>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>startRouter</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>routerid</param>
			</item>
		</parameters>
	</command>

<!--  Test case 896 - try to delete a security group when it's assigned to the vm - negative case -->
	<command>
		<name>createSecurityGroup</name>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>deleteSecurityGroup</name>
		<testcase>896</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	
	
<!--  Test case 898 - specify non-existing id in deleteSecurityGroup - negative case -->
	<command>
		<name>deleteSecurityGroup</name>
		<testcase>898</testcase>
		<error>true</error>
		<parameters>
			<item>
			    <name>id</name>
				<value>70000</value>
			</item>
		</parameters>
	</command>
	
<!--  Test case 899 - try to assign a security group to the same vm twice - negative case -->
	<command>
		<name>createSecurityGroup</name>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>createNetworkRule</name>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>assignSecurityGroup</name>
		<error>true</error>
		<testcase>899</testcase>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
<!--  Test case 900 - try to assign a security group to destroyed vm - negative case -->
	<command>
		<name>destroyVirtualMachine</name>
		
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createSecurityGroup</name>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>createNetworkRule</name>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		<testcase>900</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
<!--  Test case 901 - try to assign empty group to the vm - should be able to do it -->
	<command>
		<name>recoverVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>startVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>deleteNetworkRule</name>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>pfruleid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		<testcase>901</testcase>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
<!--  Test case 902 - add network rule to the group which is assigned to the running vm -->
	<command>
		<name>createNetworkRule</name>
		<testcase>902</testcase>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
		</returnvalue>
	</command>
	
	
<!--  Test case 903 - add network rule to the group which is assigned to multiple running vms -->
	<command>
		<name>deployVirtualMachine</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>vmid1</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>associateIpAddress</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
		</parameters>
		<returnvalue> 
			<item setparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip1</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid1</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip1</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>createNetworkRule</name>
		<testcase>903</testcase>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
		</returnvalue>
	</command>
	
<!--  Test case 904 - execute removeSecurityGroup with incorrect groupId -->
	<command>
		<name>removeSecurityGroup</name>
		<testcase>904</testcase>
		<error>true</error>
		<parameters>
			<item>
			    <name>groupid</name>
				<value>7556888</value>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	
<!--  Test case 905 - execute removeSecurityGroup with incorrect ip/vmid combination -->
	<command>
		<name>removeSecurityGroup</name>
		<testcase>905</testcase>
		<error>true</error>
		<parameters>
			<item>
			    <name>groupid</name>
				<value>pfgroupid</value>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item>
			    <name>publicip</name>
				<value>172.16.0.158</value>
			</item>
		</parameters>
	</command>		

<!--  Test case 906 - try to remove security group when domR is stopped -->
	<command>
		<name>createSecurityGroup</name>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>createNetworkRule</name>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>stopRouter</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>routerid</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>removeSecurityGroup</name>
		<testcase>906</testcase>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>startRouter</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>routerid</param>
			</item>
		</parameters>
	</command>


<!--  Test case 907 - remove security group from one of the vms -->
	<command>
		<name>deployVirtualMachine</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>vmid1</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>deployVirtualMachine</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>vmid2</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>createSecurityGroup</name>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>createNetworkRule</name>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
		</returnvalue>
	</command>	
	
	
	<command>
		<name>associateIpAddress</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
		</parameters>
		<returnvalue> 
			<item setparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip1</param>
			</item>
		</returnvalue>
	</command>	
	
	
	<command>
		<name>associateIpAddress</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
		</parameters>
		<returnvalue> 
			<item setparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip2</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid1</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip1</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>assignSecurityGroup</name>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid2</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip2</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>removeSecurityGroup</name>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid1</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listSecurityGroupsByVM</name>
		<empty>true</empty>
		<testcase>907-1</testcase>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid1</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>nonsourcenatpublicip2</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>listSecurityGroupsByVM</name>
		<testcase>907-2</testcase>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid2</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>nonsourcenatpublicip2</param>
			</item>
		</parameters>
	</command>	

<!--  Test case 908 - verify that releasing non-source nat ip address removes all the security groups from the vm which belong to this ip -->
	<command>
		<name>deployVirtualMachine</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>associateIpAddress</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
		</parameters>
		<returnvalue> 
			<item setparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listSecurityGroupsByVM</name>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>disassociateIpAddress</name>
		<parameters>
			<item getparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listSecurityGroupsByVM</name>
		<empty>true</empty>
		<testcase>908</testcase>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	
<!--  Test case 909 - remove security group belonging to non-source nat ip address - should be able to do it -->
	<command>
		<name>associateIpAddress</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
		</parameters>
		<returnvalue> 
			<item setparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>assignSecurityGroup</name>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listSecurityGroupsByVM</name>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>removeSecurityGroup</name>
		<testcase>909</testcase>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listSecurityGroupsByVM</name>
		<empty>true</empty>
		<testcase>909</testcase>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
	
<!--  Test case 911 - list security groups by admin via 8080 port -->	
	<command>
		<name>createUser</name>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>firstname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>lastname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>email</name>
				<value>apiuser@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>userid</param>
			</item>
			<item setparam="true">
				<name>username</name>
				<param>usernamevar</param>
			</item>
			<item setparam="true">
				<name>account</name>
				<param>accountvar</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>register</name>
		<parameters>
			<item getparam="true">
			    <name>username</name>
				<param>usernamevar</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>apikey</name>
				<param>apikey</param>
			</item>
			<item setparam="true">
				<name>secretkey</name>
				<param>secretkey</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>deployVirtualMachine</name>
		<usercommand>true</usercommand>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>displayname</name>
				<value>namefordisplay</value>
			</item>
			<item>
				<name>group</name>
				<value>group1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>associateIpAddress</name>
		<usercommand>true</usercommand>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
		</parameters>
		<returnvalue> 
			<item setparam="true">
				<name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>createSecurityGroup</name>
		<usercommand>true</usercommand>
		<parameters>
			<item random="true">
			    <name>name</name>
			</item>
			<item>
			    <name>description</name>
				<value>none</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfgroupid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>createNetworkRule</name>
		<usercommand>true</usercommand>
		<parameters>
			<item randomnumber="true">
			    <name>publicport</name>
			</item>
			<item randomnumber="true">
			    <name>privateport</name>
			</item>
			<item getparam="true">
			    <name>securitygroupid</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>pfruleid</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>assignSecurityGroup</name>
		<usercommand>true</usercommand>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	
	<command>
		<name>createUser</name>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>firstname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>lastname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>email</name>
				<value>apiuser@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>userid</param>
			</item>
			<item setparam="true">
				<name>username</name>
				<param>usernamevar</param>
			</item>
			<item setparam="true">
				<name>account</name>
				<param>accountvar</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>register</name>
		<parameters>
			<item getparam="true">
			    <name>username</name>
				<param>usernamevar</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>apikey</name>
				<param>apikey</param>
			</item>
			<item setparam="true">
				<name>secretkey</name>
				<param>secretkey</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>listSecurityGroups</name>
		<testcase>911</testcase>
		<empty>false</empty>
		<usercommand>true</usercommand>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>pfgroupid</param>
			</item>
		</parameters>
	</command>	

<!-- Test case 910 - list security group created by the user via 8096 port -->
	<command>
		<name>listSecurityGroups</name>
		<testcase>910</testcase>
		<empty>false</empty>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>pfgroupid</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
	</command>	
	
<!-- Test case 912 - regular user shouldn't see groups belonging to other users -->
	<command>
		<name>createUser</name>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>firstname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>lastname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>email</name>
				<value>apiuser@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>userid</param>
			</item>
			<item setparam="true">
				<name>username</name>
				<param>usernamevar</param>
			</item>
			<item setparam="true">
				<name>account</name>
				<param>accountvar</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>register</name>
		<parameters>
			<item getparam="true">
			    <name>username</name>
				<param>usernamevar</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>apikey</name>
				<param>apikey</param>
			</item>
			<item setparam="true">
				<name>secretkey</name>
				<param>secretkey</param>
			</item>
		</returnvalue>
	</command>	

	<command>
		<name>listSecurityGroups</name>
		<testcase>912</testcase>
		<empty>true</empty>
		<usercommand>true</usercommand>
	</command>	

<!-- Test case 913 - listsecuritygroupbyVM created by the user via 8096 port -->
	<command>
		<name>listSecurityGroupsByVM</name>
		<empty>false</empty>
		<testcase>913</testcase>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	
<!-- Test case 914 - listsecuritygroupbyVM created by the user by admin via 8080 port -->
	<command>
		<name>createUser</name>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>firstname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>lastname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>email</name>
				<value>apiuser@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>userid</param>
			</item>
			<item setparam="true">
				<name>username</name>
				<param>usernamevar</param>
			</item>
			<item setparam="true">
				<name>account</name>
				<param>accountvar</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>register</name>
		<parameters>
			<item getparam="true">
			    <name>username</name>
				<param>usernamevar</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>apikey</name>
				<param>apikey</param>
			</item>
			<item setparam="true">
				<name>secretkey</name>
				<param>secretkey</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>listSecurityGroupsByVM</name>
		<empty>false</empty>
		<testcase>914</testcase>
		<usercommand>true</usercommand>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>	
	
	
<!-- Test case 915 - listsecuritygroupbyVM - make sure that regular user can't see secGroups belonging to other users -->
	<command>
		<name>createUser</name>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>firstname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>lastname</name>
				<value>apiuser</value>
			</item>
			<item>
				<name>email</name>
				<value>apiuser@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>userid</param>
			</item>
			<item setparam="true">
				<name>username</name>
				<param>usernamevar</param>
			</item>
			<item setparam="true">
				<name>account</name>
				<param>accountvar</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>register</name>
		<parameters>
			<item getparam="true">
			    <name>username</name>
				<param>usernamevar</param>
			</item>
			<item>
			    <name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>apikey</name>
				<param>apikey</param>
			</item>
			<item setparam="true">
				<name>secretkey</name>
				<param>secretkey</param>
			</item>
		</returnvalue>
	</command>	
	
	<command>
		<name>listSecurityGroupsByVM</name>
		<error>true</error>
		<testcase>915</testcase>
		<usercommand>true</usercommand>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item getparam="true">
			    <name>ipaddress</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
<!-- Test case 942 - try to assign a security group to non-existing vm -->
	<command>
		<name>assignSecurityGroup</name>
		<testcase>942</testcase>
		
		<error>true</error>
		<parameters>
			<item getparam="true">
			    <name>groupid</name>
				<param>pfgroupid</param>
			</item>
			<item>
			    <name>virtualmachineid</name>
				<value>1000000</value>
			</item>
			<item getparam="true">
			    <name>publicip</name>
				<param>nonsourcenatpublicip</param>
			</item>
		</parameters>
	</command>
	
<!-- Test case 979 - listsecuritygroupbyVM with incorrect ip address -->
	<command>
		<name>listSecurityGroupsByVM</name>
		<empty>true</empty>
		<testcase>979</testcase>
		<parameters>
			<item getparam="true">
			    <name>virtualmachineid</name>
				<param>vmid</param>
			</item>
			<item>
			    <name>ipaddress</name>
				<value>192.168.0.9</value>
			</item>
		</parameters>
	</command>	

</securitygroups>
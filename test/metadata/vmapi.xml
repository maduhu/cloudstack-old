<vmapi>	

<!-- Test case #72 - verify that listVm command doesn't display VM in expunging state but displays a VM in destroyed state -->
	<command>
		<name>deployVirtualMachine</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item setparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
			<item setparam="true">
				<name>ipaddress</name>
				<param>vmipaddress</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>destroyVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>listVirtualMachines</name>
		<testcase>72</testcase>
		<parameters>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item getparam="true">
				<name>name</name>
				<param>vmname</param>
			</item>
		</parameters>
	</command>
	
<!-- Test case #92 - verify that you can't start destroyed virtual machine -->
	<command>
		<name>startVirtualMachine</name>
		<testcase>92</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
<!-- Test case #73 - verify that listVm returns nothing when id of non-existing VM is specified -->
	<command>
		<name>listVirtualMachines</name>
		<testcase>73</testcase>
		<parameters>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>id</name>
				<value>100000000</value>
			</item>
		</parameters>
	</command>
	
<!-- Test case #74 - verify that listVm returns error code when account=removedAccount is specified -->	
	<command>
		<name>createUser</name>
		<parameters>
			<item random="true">
			    <name>username</name>
			</item>
			<item>
			    <name>password</name>
				<value>testcase74</value>
			</item>
			<item>
				<name>firstname</name>
				<value>testcase74</value>
			</item>
			<item>
				<name>lastname</name>
				<value>testcase74</value>
			</item>
			<item>
				<name>email</name>
				<value>testcase74@gmail.com</value>
			</item>
			<item>
				<name>accounttype</name>
				<value>0</value>
			</item>
		</parameters>
		<returnvalue>
			<item verify="false" setparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item verify="false" setparam="true">
				<name>id</name>
				<param>userid</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>deleteUser</name>
		<parameters>
			<item getparam="true">
			    <name>id</name>
				<param>userid</param>
			</item>
		</parameters>
	</command>	

		<command>
		<name>listVirtualMachines</name>
		<testcase>74</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
		</parameters>
	</command>
	
<!-- Test case #77 - verify that you can't enable HA for VM in destroyed state -->
	<command>
		<name>updateVirtualMachine</name>
		<testcase>77</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item>
				<name>haenable</name>
				<value>true</value>
			</item>
		</parameters>
	</command>	
	
	<!-- Test case #592 - verify that you can't enable HA for non-existing vm -->
	<command>
		<name>updateVirtualMachine</name>
		<testcase>592</testcase>
		<error>true</error>
		<parameters>
			<item>
				<name>id</name>
				<value>1000000</value>
			</item>
			<item>
				<name>haenable</name>
				<value>true</value>
			</item>
		</parameters>
	</command>	
	

<!-- Test case #79 - verify that you can reset password for VM in stopped state -->	
	<command>
		<name>recoverVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>resetPasswordForVirtualMachine</name>
		<testcase>79</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>

<!-- Test case #76 - verify that you can enable HA for VM in stopped state -->	

	<command>
		<name>updateVirtualMachine</name>
		<testcase>76</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item>
				<name>haenable</name>
				<value>true</value>
			</item>
		</parameters>
	</command>	


<!-- Test case #79 - verify that you can reset password for VM in running state -->	
	<command>
		<name>startVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>resetPasswordForVirtualMachine</name>
		<testcase>79</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	

<!-- Test case #76 - verify that you can disable HA for VM in running state -->	

	<command>
		<name>updateVirtualMachine</name>
		<testcase>76</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
			<item>
				<name>haenable</name>
				<value>false</value>
			</item>
		</parameters>
	</command>	
	
	
<!-- Test case #80 - verify that you can't reset password for VM in destroyed state -->
		<command>
		<name>destroyVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>resetPasswordForVirtualMachine</name>
		<testcase>80</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>
	
<!-- Test case #89 - verify that you can't reboot destroyed VM -->	
	<command>
		<name>rebootVirtualMachine</name>
		<testcase>89</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>vmid</param>
			</item>
		</parameters>
	</command>

	
<!-- Test case #81 - resetpassword for virtual machine which was made of template with password disabled - Negative case -->
	<command>
		<name>deployVirtualMachine</name>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>account</name>
				<value>admin</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
		<returnvalue>
			<item setparam="true">
				<name>id</name>
				<param>windowsvmid</param>
			</item>
			<item setparam="true">
				<name>name</name>
				<param>windowsvmname</param>
			</item>
			<item setparam="true">
				<name>ipaddress</name>
				<param>windowsvmipaddress</param>
			</item>
		</returnvalue>
	</command>
	
	<command>
		<name>resetPasswordForVirtualMachine</name>
		<testcase>81</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>windowsvmid</param>
			</item>
		</parameters>
	</command>
	
<!-- Test case #82 - try to change service offering for VM in running state - should fail - Negative case -->
	<command>
		<name>changeServiceForVirtualMachine</name>
		<testcase>82</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>windowsvmid</param>
			</item>
			<item>
				<name>serviceofferingid</name>
				<value>2</value>
			</item>
		</parameters>
	</command>

<!-- Test case #83 - try to change service offering to the one that VM already has - should fail - Negative case -->
	<command>
		<name>stopVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>windowsvmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>changeServiceForVirtualMachine</name>
		<testcase>83</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>windowsvmid</param>
			</item>
			<item>
				<name>serviceofferingid</name>
				<value>1</value>
			</item>
		</parameters>
	</command>
	
	
<!-- Test case #90 - try to reboot stopped vitrual machine - should fail - Negative case -->
	<command>
		<name>rebootVirtualMachine</name>
		<testcase>90</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>windowsvmid</param>
			</item>
		</parameters>
	</command>
		

<!-- Test case #95 - try to recover stopped/running vitrual machine - shouldn't fail -->
	<command>
		<name>recoverVirtualMachine</name>
		<testcase>95</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>windowsvmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>startVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>windowsvmid</param>
			</item>
		</parameters>
	</command>
	
	<command>
		<name>recoverVirtualMachine</name>
		<testcase>95</testcase>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>windowsvmid</param>
			</item>
		</parameters>
	</command>


<!-- Test case #84 - try to deploy vm and assign it to non-existing account - should fail - Negative case -->
	<command>
		<name>deployVirtualMachine</name>
		<testcase>84</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item>
				<name>account</name>
				<value>blahblah-invaliduser</value>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
	</command>	
	
<!-- Test case #85 - try to deploy vm and assign it to removed account - should fail - Negative case -->
	<command>
		<name>deployVirtualMachine</name>
		<testcase>85</testcase>
		<error>true</error>
		<parameters>
			<item getparam="true">
			    <name>zoneid</name>
				<param>globalzoneid</param>
			</item>
			<item>
			    <name>serviceofferingid</name>
				<value>1</value>
			</item>
			<item>
			    <name>diskofferingid</name>
				<value>1</value>
			</item>	
			<item getparam="true">
				<name>templateid</name>
				<param>globaltemplateid</param>
			</item>
			<item getparam="true">
				<name>account</name>
				<param>accountname</param>
			</item>
			<item>
				<name>domainid</name>
				<value>1</value>
			</item>
		</parameters>
	</command>	
	
<!-- Test case #87 - try to send destroy command for non-existing vm - should fail - Negative case -->
	<command>
		<name>destroyVirtualMachine</name>
		<testcase>87</testcase>
		<error>true</error>
		<parameters>
			<item>
				<name>id</name>
				<value>100000</value>
			</item>
		</parameters>
	</command>
	
<!-- Test case #88 - try to send reboot command for non-existing vm - should fail - Negative case -->
	<command>
		<name>rebootVirtualMachine</name>
		<testcase>88</testcase>
		<error>true</error>
		<parameters>
			<item>
				<name>id</name>
				<value>100000</value>
			</item>
		</parameters>
	</command>
	
<!-- Test case #91 - try to send start command for non-existing vm - should fail - Negative case -->
	<command>
		<name>startVirtualMachine</name>
		<testcase>88</testcase>
		<error>true</error>
		<parameters>
			<item>
				<name>id</name>
				<value>100000</value>
			</item>
		</parameters>
	</command>

<!-- Execute cleanup - destroy the VM-->
	<command>
		<name>destroyVirtualMachine</name>
		<parameters>
			<item getparam="true">
				<name>id</name>
				<param>windowsvmid</param>
			</item>
		</parameters>
	</command>
	
	
</vmapi>		